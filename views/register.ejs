<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Register</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css" rel="stylesheet" />

  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body, html {
      min-height: 100vh;
      font-family: 'Segoe UI', sans-serif;
    }

    .background-container {
      position: fixed;
      top: 0;
      left: 0;
      z-index: -1;
      width: 100%;
      height: 100%;
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 1fr 1fr;
    }

    .background-container div {
      background-size: cover;
      background-position: center;
      filter: brightness(0.9) blur(0px);
    }

    .bg1 { background-image: url('https://images.pexels.com/photos/358574/pexels-photo-358574.jpeg?auto=compress&cs=tinysrgb&w=1600'); }
    .bg2 { background-image: url('https://images.pexels.com/photos/271639/pexels-photo-271639.jpeg?auto=compress&cs=tinysrgb&w=1600'); }
    .bg3 { background-image: url('https://images.pexels.com/photos/1134176/pexels-photo-1134176.jpeg?auto=compress&cs=tinysrgb&w=1600'); }
    .bg4 { background-image: url('https://images.pexels.com/photos/97083/pexels-photo-97083.jpeg?auto=compress&cs=tinysrgb&w=1600'); }

    .glass-box {
      background: rgba(255, 255, 255, 0.08);
      backdrop-filter: blur(14px);
      -webkit-backdrop-filter: blur(14px);
      border-radius: 20px;
      padding: 40px 50px;
      margin: 60px auto;
      max-width: 600px;
      color: white;
      box-shadow: 0 10px 35px rgba(0, 0, 0, 0.5);
      border: 1px solid rgba(255, 255, 255, 0.2);
    }

    label, .form-label, .form-select, .form-control {
      color: #fff !important;
      background: transparent !important;
    }

    .form-control::placeholder {
      color: #ccc;
    }

    .form-control:focus, .form-select:focus {
      border-color: white;
      box-shadow: none;
    }

    .text-danger {
      font-size: 0.85rem;
    }

    a {
      color: #f1f1f1;
    }

    a:hover {
      color: #fff;
    }

    .btn-light {
      font-weight: bold;
    }

    @media (max-width: 576px) {
      .glass-box {
        padding: 25px 20px;
        margin: 30px 15px;
      }
    }
  </style>
</head>
<body>

  <!-- ✅ Background -->
  <div class="background-container">
    <div class="bg1"></div>
    <div class="bg2"></div>
    <div class="bg3"></div>
    <div class="bg4"></div>
  </div>

  <!-- ✅ Form Container -->
  <div class="container">
    <div class="glass-box">
      <h2 class="text-center mb-4">Register</h2>

      <% if (typeof message !== 'undefined' && message) { %>
        <div class="alert alert-info text-center">
          <%= message %>
        </div>
      <% } %>

      <form method="POST" action="/register" novalidate>
        <div class="mb-3">
          <label for="username" class="form-label">Username</label>
          <input type="text" class="form-control" id="username" name="username"
            placeholder="Enter Username" required />
          <div id="username-error" class="text-danger"></div>
        </div>

        <div class="mb-3">
          <label for="useremail" class="form-label">Email address</label>
          <input type="email" class="form-control" id="useremail" name="useremail"
            placeholder="Enter Email" required />
          <div id="useremail-error" class="text-danger"></div>
        </div>

        <div class="mb-3">
          <label for="password" class="form-label">Password</label>
          <input type="password" class="form-control" id="password" name="password"
            placeholder="Enter Password" required />
          <div id="password-error" class="text-danger"></div>
        </div>

        <div class="mb-3">
          <label for="contact" class="form-label">Phone Number</label>
          <input type="tel" class="form-control" id="contact" name="contact"
            placeholder="Enter Phone Number" required />
          <div id="contact-error" class="text-danger"></div>
        </div>

        <div class="mb-4">
          <label for="type" class="form-label">User Type</label>
          <select class="form-select" id="type" name="type" required>
            <option value="">Select Type</option>
            <option value="user">User</option>
            <option value="admin">Admin</option>
          </select>
          <div id="type-error" class="text-danger"></div>
        </div>

        <div class="d-grid mb-3">
          <button type="submit" class="btn btn-light" id="submitBtn" disabled>Register</button>
        </div>

        <p class="text-center">Already have an account? <a href="/login">Login here</a></p>
      </form>
    </div>
  </div>

  <!-- ✅ Script -->
  <script>
    const username = document.getElementById("username");
    const email = document.getElementById("useremail");
    const password = document.getElementById("password");
    const contact = document.getElementById("contact");
    const userType = document.getElementById("type");
    const submitBtn = document.getElementById("submitBtn");

    const patterns = {
      username: /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{6,}$/,
      email: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/,
      password: /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{6,}$/,
      contact: /^\d{10}$/
    };

    const messages = {
      username: "Username must be at least 6 characters with letters and digits.",
      email: "Enter a valid email address.",
      password: "Password must be at least 6 characters with letters and digits.",
      contact: "Phone number must be exactly 10 digits.",
      type: "Please select a user type."
    };

    function validateField(input, pattern, errorId, message) {
      const value = input.value.trim();
      const error = document.getElementById(errorId);
      if (!pattern.test(value)) {
        error.innerText = message;
        return false;
      } else {
        error.innerText = "";
        return true;
      }
    }

    function validateType() {
      const error = document.getElementById("type-error");
      if (!userType.value) {
        error.innerText = messages.type;
        return false;
      } else {
        error.innerText = "";
        return true;
      }
    }

    function checkAllValid() {
      const validUsername = validateField(username, patterns.username, "username-error", messages.username);
      const validEmail = validateField(email, patterns.email, "useremail-error", messages.email);
      const validPassword = validateField(password, patterns.password, "password-error", messages.password);
      const validContact = validateField(contact, patterns.contact, "contact-error", messages.contact);
      const validType = validateType();

      submitBtn.disabled = !(validUsername && validEmail && validPassword && validContact && validType);
    }

    [username, email, password, contact].forEach(input => {
      input.addEventListener("input", checkAllValid);
    });
    userType.addEventListener("change", checkAllValid);

    document.querySelector("form").addEventListener("submit", function (e) {
      checkAllValid();
      if (submitBtn.disabled) {
        e.preventDefault();
      }
    });
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
